version: '3.6'

services:
  ################################################################
  #                        Services                              #
  ################################################################
  traefik:
    image: 'traefik:latest'
    container_name: traefik
    environment:
      - TZ=${TZ}
    command:
      - '--entryPoints.http.address=:80'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--accesslog=true'
      - '--metrics.prometheus=true'
      - '--metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000'
      - '--metrics.prometheus.addEntryPointsLabels=true'
      - '--metrics.prometheus.addServicesLabels=true'
    ports:
      - '80:80'
      - '8080:8080'
    labels:
      - 'traefik.http.routers.traefik.rule=Host(`${ROOT_URL}`)'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  ################################################################
  #                     Monitoring                               #
  ################################################################
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    restart: always
    environment:
      - 'TZ=${TZ}'
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://${ROOT_URL}/prometheus'
    expose:
      - '9090'
    # ports:
    #   - '9091:9090'
    volumes:
      - './config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.prometheus.rule=Host(`${ROOT_URL}`) && PathPrefix(`/prometheus`)'
      - 'traefik.http.services.prometheus.loadbalancer.server.port=9090'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: always
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - 'GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana'
      - 'GF_SERVER_SERVE_FROM_SUB_PATH=true'
      - 'GF_SECURITY_ALLOW_EMBEDDING=true'
    expose:
      - '3000'
    volumes:
      - '${USERDIR}/volumes/grafana/data:/var/lib/grafana:z'
      - './config/grafana/plugins:/var/lib/grafana/plugins:rw'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`${ROOT_URL}`) && PathPrefix(`/grafana`)'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    hostname: node-exporter
    user: root
    privileged: true
    restart: always
    expose:
      - '9100'
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
  ################################################################
  #                     Media Server                             #
  ################################################################
  muximux:
    image: linuxserver/muximux
    container_name: muximux
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    expose:
      - '80'
    volumes:
      - '${USERDIR}/volumes/muximux/config:/config:z'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.muximux.rule=Host(`${ROOT_URL}`) && PathPrefix(`/`)'
      - 'traefik.http.services.muximux.loadbalancer.server.port=80'

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - 'UMASK_SET=022'
    expose:
      - '8096'
    ports:
      - '7359:7359/udp' #for clients to discover
      - '1900:1900/udp' #DLNA clients
    volumes:
      - '${USERDIR}/volumes/jellyfin/config:/config:z'
      - '${USERDIR}/media/tv-shows:/data/tv-shows'
      - '${USERDIR}/media/movies:/data/movies'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jellyfin.rule=Host(`${ROOT_URL}`) && PathPrefix(`/jellyfin`)'
      - 'traefik.http.services.jellyfin.loadbalancer.server.port=8096'
      - 'traefik.http.services.jellyfin.loadBalancer.passHostHeader=true'

  jackett:
    image: linuxserver/jackett:development
    container_name: jackett
    hostname: jackett
    restart: always
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    # ports:
    #   - '9117:9117'
    expose:
      - '9117'
    volumes:
      - '${USERDIR}/volumes/radarr/config:/config:z'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.jackett.rule=Host(`${ROOT_URL}`) && PathPrefix(`/jackett`)'
      - 'traefik.http.services.jackett.loadbalancer.server.port=9117'

  radarr:
    image: linuxserver/radarr:preview
    container_name: radarr
    hostname: radarr
    # ports:
    #   - '7878:7878'
    expose:
      - '7878'
    restart: always
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - 'UMASK_SET=022'
    volumes:
      - '${USERDIR}/volumes/radarr/config:/config:z'
      - '${USERDIR}/Downloads/completed:/downloads'
      - '${USERDIR}/media/movies:/movies'
      - '/etc/localtime:/etc/localtime:ro'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.radarr.rule=Host(`${ROOT_URL}`) && PathPrefix(`/radarr`)'
      - 'traefik.http.services.radarr.loadbalancer.server.port=7878'

  sonarr:
    image: linuxserver/sonarr:preview
    container_name: sonarr
    hostname: sonarr
    expose:
      - '8989'
    # ports:
    #   - '8989:8989'
    restart: always
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - 'UMASK_SET=022'
    volumes:
      - '${USERDIR}/volumes/sonarr/config:/config:z'
      - '${USERDIR}/Downloads/completed:/downloads'
      - '${USERDIR}/media/tv-shows:/tv-shows'
      - '/etc/localtime:/etc/localtime:ro'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.sonarr.rule=Host(`${ROOT_URL}`) && PathPrefix(`/sonarr`)'
      - 'traefik.http.services.sonarr.loadbalancer.server.port=8989'

  qbittorrent:
    image: 'linuxserver/qbittorrent'
    container_name: qbit
    restart: always
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
      - UMASK_SET=022
      - WEBUI_PORT=8080
    expose:
      - '8080'
    volumes:
      - '${USERDIR}/volumes/qbittorrent/config:/config:z'
      - '${USERDIR}/Downloads/completed:/downloads'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.qbittorrent.rule=Host(`${ROOT_URL}`) && PathPrefix(`/qb`)'
      - 'traefik.http.services.qbittorrent.loadbalancer.server.port=8080'
      - 'traefik.http.middlewares.qb-redirect.redirectregex.regex=^(.*)/qb$$'
      - 'traefik.http.middlewares.qb-redirect.redirectregex.replacement=$$1/qb/'
      - 'traefik.http.middlewares.qb-strip.stripprefix.prefixes=/qb/'
      - 'traefik.http.middlewares.qb-headers.headers.customrequestheaders.X-Frame-Options=SAMEORIGIN'
      - 'traefik.http.middlewares.qb-headers.headers.customrequestheaders.Referer='
      - 'traefik.http.middlewares.qb-headers.headers.customrequestheaders.Origin='
      - 'traefik.http.routers.qbittorrent.middlewares=qb-strip,qb-redirect,qb-headers'
      - 'traefik.http.services.qbittorrent.loadbalancer.passhostheader=false'

  ################################################################
  #                       Storage                                #
  ################################################################
  victoria-metrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: victoria-metrics
    restart: always
    environment:
      - 'PUID=${PUID}'
      - 'PGID=${PGID}'
      - 'TZ=${TZ}'
    expose:
      - '8428'
    volumes:
      - '${USERDIR}/volumes/victoria-metrics/data:/victoria-metrics-data:z'
